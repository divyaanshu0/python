pipeline {
    agent any  // Runs on the Jenkins master node

    environment {
        REPO_URL = "https://github.com/divyaanshu0/python.git"
        BRANCH = "main"
        IMAGE_NAME = "myapp-image"  // Updated image name
        CONTAINER_NAME = "myapp-container"  // Updated container name
        DOCKER_HUB_USER = "thevyanshuu"
        TARGET_SERVER = "172.31.19.87"  // Private IP of the target server
        TARGET_USER = "ubuntu"  // Default user for Ubuntu instances
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: "${BRANCH}", url: "${REPO_URL}"
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME}:latest ."
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    docker tag myapp-image:latest thevyanshuu/myapp-image:latest
                    docker push thevyanshuu/myapp-image:latest
                    '''
                }
            }
        }

        stage('Deploy on Remote Server') {
            steps {
                sshagent(['server-ssh-credentials']) {
                    sh '''
                    ssh -o StrictHostKeyChecking=no ${TARGET_USER}@${TARGET_SERVER} <<EOF
docker stop myapp-container || true
docker rm myapp-container || true
docker pull thevyanshuu/myapp-image:latest
docker run -d -p 5001:5001 --name myapp-container thevyanshuu/myapp-image:latest
EOF
                    '''
                }
            }
        }
    }
}
